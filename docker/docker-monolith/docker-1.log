REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE
vladimir.denisov/ubuntu-tmp-file   latest              07180d153c22        29 seconds ago      115MB
ubuntu                             16.04               7aa3602ab41e        2 weeks ago         115MB
hello-world                        latest              2cb0d9787c4d        4 weeks ago         1.85kB

* Образ, это статичный объект, для него отсутствует такое понятие, как состояние ("State"). 
Образ предназначен для разворачивания и выполнения среды внутри контейнера, соответственно, содержит в себе базовый образ ОС ("Image": "ubuntu:16.04"), архитектуру ("Architecture": "amd64"), слои из которых состоит образ (см.ниже).
Контейнер, это среда выполнения ОС и установленного ПО, загружаемая из образа. 
Контейнер имеет состояние выполнения, для него определены уникальные настройки сети, загружены необходимые драйвера, выделено определенное количество вычислительных ресурсов.

Docker image состоит из набора read-only слоев, например
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:0a42ee6ceccb1b90de2a3badec7c74cc452ce61e7ef20a80bb7f20ea53f2825e",
                "sha256:c2af38e6b250a39e0e7b9665687385c75fdf7bab5ea856a2eec4fd6b74adda95",
                "sha256:5e95929b27983df137a6cff59695739f69f6571e70fa68eb6a7abe3b74e402d2",
                "sha256:2166dba7c95bfbc84b38b7a6c7d96d323d16239aeff2f2292c61821002df2dfb",
                "sha256:bcff331e13e35a0beb71d43b4f6b859327f18587f084a1036a603e64a990e44d",
                "sha256:75c8539bf147fe1f8b86f55a683b1c8126b78307fed51675d675eb789a6acfed"
            ]
        },

Каждый слой - это diff от предыдущего слоя. 
Разные images используют общие слои (не нужно загружать каждый слой каждый раз если он уже есть).


Про контейнеры.

Создание нового контейнера создает COW read/write слой поверх image, этот слой называется container layer.
В нем отличие контейнера от image (когда удаляется контейнер, то удаляется только его r/w слой, нижележащий image остается)
При записи в файл контейнер просматривает слои (сверху-вниз, от самого нового, до самого старого).
Файл копируется в writable слой и вся запись происходит в этот скопированный файл при этом контейнер не видит нижележащие read-only копии этого файла.
В контейнерах есть состояние связанное с его runtime (pid, аппаратные ресурсы - память, процессор, описание сетевых интерфейсов), например
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
...
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
