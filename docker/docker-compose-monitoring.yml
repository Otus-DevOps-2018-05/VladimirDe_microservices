version: '3.3'
services:

  prometheus:
    image: ${USERNAME}/prometheus
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    networks:
      - front_net
      - metrics_net
      - docker2prom
    extra_hosts:
      - "host:10.0.3.1"

  sidecar:
    image: jaels/docker-debug
    networks:
      - docker2prom
      - metrics_net

  grafana:
    image: grafana/grafana:5.0.0
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - metrics_net

  alertmanager:
    image: ${USERNAME}/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:9093
    networks:
      - metrics_net
    environment:
      - GMAIL_ACCOUNT=fisakov.root@gmail.com
      - GMAIL_AUTH_TOKEN=secret


  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - metrics_net

  node-exporter:
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - metrics_net

  mongo_exporter:
    image: ${USERNAME}/docker-mongodb-exporter:${mongoexporter_version:-latest}
    environment:
      - MONGODB_URL=mongodb://post_db:27017
    networks:
      - back_net
      - metrics_net

  cloudprober:
    image: ${USERNAME}/cloudprober:${cloudprober_version:-latest}
    ports:
      - '9313:9313'
    networks:
      - metrics_net
      - front_net
      - back_net

  telegraf:
    image: jaels/telegraf
    networks:
      - metrics_net
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - influxdb

  influxdb:
    image: influxdb
    ports:
      - '8086:8086'
    volumes:
      - 'influxdb_data:/var/lib/influxdb'
    networks:
      - metrics_net
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_USER=root
      - INFLUXDB_ADMIN_PASSWORD=secret
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=secret
      - INFLUXDB_WRITE_USER=telegraf
      - INFLUXDB_WRITE_USER_PASSWORD=secret

volumes:
  prometheus_data:
  grafana_data:
  influxdb_data:

networks:
  front_net:
    external:
      name: frontend
  back_net:
    external:
      name: backend
  docker2prom:
    external:
      name: hostnet
  metrics_net:
